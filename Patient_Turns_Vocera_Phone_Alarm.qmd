---
title: "Reducing Missed Patient Turns: A Quality Improvement Initiative Through Vocera Phone Alarms"
shorttitle: "Reducing Missed Patient Turns Through Vocera Phone Alarms"
# Set names and affiliations.
# It is nice to specify everyone's orcid, if possible.
# There can be only one corresponding author, but declaring one is optional.
author:
  - name: Michael Avalos Jr  
    corresponding: true
    orcid: 0000-0000-0000-0001
    email: avalosmajr@uchicago.edu
    affiliations:
      - id: id1
        name: "University of Chicago"
        group: Biomedical Sciences Program
        department: Biological Sciences Division
        address: 5841 S. Maryland Ave.
        city: Chicago
        region: IL
        country: USA
        postal-code: 60637
  - name: Marianne Banas, RN
    orcid: 0000-0000-0000-0002
    affiliations: 
      - ref: id1
        name: "University of Chicago"
  - name: Peggy Zemansky, RN, BSN, CCRN
    orcid: 0000-0000-0000-0003
    affiliations:
        name: "University of Chicago"
author-note:
  status-changes: 
    affiliation-change: ~
    deceased: ~
  disclosures:
    study-registration: ~
    data-sharing: ~
    related-report: ~
    conflict-of-interest: The authors have no conflicts of interest to disclose.
    financial-support: ~
    gratitude: ~
    authorship-agreements: ~
abstract: "This document is a template demonstrating the apaquarto format."
keywords: [Hospital-acquired pressure injury, Incidence, Intensive care units, Pressure injury, Prevention, Quality Improvement]
# If true, tables and figures are mingled with the text instead of listed at the end of the document.
impact-statement: ~
floatsintext: true
# Numbered lines (.pdf and .docx only)
numbered-lines: false
# File with references
bibliography: bibliography.bib
# Suppress title page
suppress-title-page: false
# Link citations to references
link-citations: true
# Masks references that appear in the masked-citations list
mask: false
masked-citations:
  - schneider2012cattell
  - schneider2015intelligence
# If true, adds today's date below author affiliations. If text, can be any value.
# This is not standard APA format, but it is convenient.
# Works with docx, html, and typst. 
draft-date: false
# Language options. See https://quarto.org/docs/authoring/language.html
lang: en
language:
  citation-last-author-separator: "and"
  citation-masked-author: "Masked Citation"
  citation-masked-date: "n.d."
  citation-masked-title: "Masked Title"
  email: "Email"
  title-block-author-note: "Author Note"
  title-block-correspondence-note: "Correspondence concerning this article should be addressed to"
  title-block-role-introduction: "Author roles were classified using the Contributor Role Taxonomy (CRediT; https://credit.niso.org/) as follows:"
  title-impact-statement: "Impact Statement"
  references-meta-analysis: "References marked with an asterisk indicate studies included in the meta-analysis."
format:
  apaquarto-docx: default
  apaquarto-html: default
  apaquarto-pdf: default
  apaquarto-typst: 
    keep-typ: true
    list-of-figures: true
    list-of-tables: true
    toc: true
    documentmode: jou
    keep-tex: true
---

```{r}
#| label: setup

# Load necessary packages
library(conflicted)
library(tidyverse)
library(papaja)
library(flextable)
library(ftExtra)
library(knitr)
library(broom)

# In addition to strategically ordering your library calls, 
# you can use the conflicts_prefer function to specify which 
# package's function to use when there are multiple options.
conflicts_prefer(dplyr::filter, .quiet = TRUE)
conflicts_prefer(flextable::separate_header, .quiet = TRUE)
conflicts_prefer(flextable::theme_apa, .quiet = TRUE) # we know that we never want the papaja one!

# Set seed
set.seed(1234)

# Generate r-references.bib file (see explanation in the Methods section)
papaja::r_refs(file = "r-references.bib")

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```


## Format note: Independent Project Rough Draft should be 3-4 double-spaced pages, excluding the attached bibliography.

## Introduction
  Nurses within intensive care units (ICUs) carry a significant responsibility of ensuring their patient(s) do not develop a hospital-acquired pressure injury (HAPI). Fortunately, current PI prevention approaches do not solely rely on personal knowledge and decision-making but instead guide through skin and risk assessments (e.g., Braden Scale) and repositioning. However, nurses are confronted with countless variables that may affect their performance, including but not limited to heavy workloads, fast-paced environments, and long hours. Collectively, this leads to inadvertent missed turns and documentation, increasing the patient's risk for a HAPI. Therefore, there is a current need to equip nurses better to allow for them to provide the care that they are capable of. The current project aims to reduce missed turns and increase turn documentation within the SICU and BICU through alarms on the nurse's Vocera phones. Characteristics of the intervention includes the alarm being low-priorty, alerting every two hours (totaling six times per shift) and allowing the nurse to choose their own alarm, have the ability to use the snooze feature to si. The primary requirement is that nurses put the alarm into their Vocera phone, which needs to be set at even hours. The effectiveness of the implemented intervention will be analyzed through a comparison of previous patient data within the electronic health records (EHR). This study will help determine whether electronic devices can contribute to a nurse’s provided care and possibly address unforeseen correlations regarding patients and healthcare workers.  

## Research Question
  How effective are the Vocera phone alarms in reminding SICU and BICU nurses to reposition patients and document turns in efforts to prevent hospital-acquired pressure injuries?  

## Literature Review (Approximately 1 page) NEED LIKE 2 MORE SENTENCES 
  For approximately three decades, the Braden Scale has been adopted and served as the primary practice for PI prevention within the United States; nevertheless, PIs remain a concern for hospitals, especially within the intensive care units (ICUs) [@kring2007reliability; @lyder2008pressure; @wei2020predictive]. As technology continues to evolve, it is necessary to utilize even its most simplistic offers, such as alarms, which have shown to be effective in PI prevention. A computer on-screen list, which served as a reminder system, helped the healthcare staff to know the patient’s most recent risk assessment, PI location, and arrival date [@sebastian-viana2016reduction]. The reminder system demonstrated its effectiveness through a reduction of PIs developed [@sebastian-viana2016reduction]. Group A, who was not exposed to the intervention in 2009, reported 84 PIs out of the 9,263 patients, while Group B, who were involved in the reminder system, reported that out of the 9,220 patients, only 59 developed PIs [@sebastian-viana2016reduction]. Moreover, technology in PI prevention consists of various interventions like wearable sensors, which have been classified as “cost-effective”, decrease HAPI development, and improve turn compliance; however, the claim can be made that additional efforts should be made before the purchases of LEAF Sensors at $250/sensor [@crotty2023using]. The Vocera phone alarms may aid in reminding nurses to input turn documentation, turn patients every two hours, and improve patient outcomes through a more cost-effective approach. The intervention shows there is no current need to conduct human subject testing to improve the prevention of PIs; instead, it is necessary to equip nurses better to allow for them to provide the most efficient care.

# NEED TO PUT ONE OF THE CITAITONS AT THE BEGINING TO MEET REQS

## Methods 
### *Data storage*
Weekly audits are performed through chart review and documented on paper. Data collected through audit includes patient initials, room number, MRN, length of stay, Braden Score, turned Q2, description (time of event, type of event, and nurse associated with event), total missed turns, and percentage of turn success for that patients that week. The weekly audit papers remain with Marianne Banas, RN, and Peggy Zemansky, RN, BSN. For this comparison, the data will be transferred from paper and stored within REDCap to ensure the protection of sensitive information. Furthermore, it should be noted that identifiers will be removed. Access to the weekly audit forms includes Michael Avalos Jr., Marianne Banas, RN, and Peggy Zemansky, RN, BSN, CCRN. Access to REDCap will include Michael Avalos Jr. as the primary project owner but may include Marianne Banas, RN, and Peggy Zemansky, RN, BSN, upon request. 

### *EHR data collection*
Data will be extracted from patients before and after the nursing reminders were implemented (7/1/2024 to 5/1/2025). Patients prior to the implementation will undergo the same weekly form measurements as mentioned above; additional variables such as race, gender, age, weight, diseases, and history of pressure injury will be recorded. Information collected from the EHR for patients includes MRN, length of stay, Braden Score, turned Q2, description (time of event, type of event, and nurse associated with event), turn documentation, race, gender, age, weight, diseases, and history of pressure injury. Information collected from the EHR for nurses includes name, shift, experience, and turn documentation. 

## Project Deliverables (Approximately 1/2 page)
 

## Results
### Nurse Analysis 
  The most committed type of event were missed turns (60) in comparison to repeated turns (40), as seen in @fig-Nurse_Shift_Event. To gain more insight, the day and night shifts were investigated, which showed consistency with missed turn being the most common amongst both shifts; however, the day shift was associated with 16 more total events than the night shift @fig-Nurse_Shift_Event. The notable difference between shifts lead to comparison of weekday and weekends, as seen in @fig-Nurse_Weekdayend_Type, which shwoed that weekdays had 36 and 20 more total events and missed turns, respectively. The differences between time of week and shift types made the team curious as to whether if there were specifc nurses responsible for majority of these actions and whether there were anymore associations (e.g., missed vs. repeated, day vs. night). If one refers to @fig-SpecNurse_Event_Amount, the nurses associated with the most events are Nurses C, H, K, and V with 9, 6, 6, 6, respectively. Three out the four nurses commited more missed turns during their day shift (@fig-SpecNurse_Shift_missed). Interestingly, Nurses B, I, K, N, R, S did not obtain one repeated turn while only nurse z was able to avoid commiting a missed turn, @fig-SpecNurse_Event_Amount. 
  
### Age Analysis  
  The patients were separated into four age groups 20-39, 40-59, 60-79, 80+; here, it was shown across all age groups, missed turns were the most common type of event. It is worth noting that within the 60-79 age group, there were 10 more missed than repeated turns, which was double the second age gorups (@fig-Nurse_Event_Age). Surprisingly, missed turns were the most common amongst all levels of risk and age groups, expect for one group (80+) which was tied @fig-Age_Type_Risk.  
  


  
  


The study wanted to investigate what was the most common type of event for each age, which show (----- check it for braden scale ). it was shown that the -----  committed ---- however for both shifts were popular in the sense that Missed turn was the most committed 






## Timeline
The timeline displayed below illustrates the plans going forward. 

### **Stage One: Quality Improvement Form** 
- Resubmit quality improvement form by **03/22/25**. 

### **Stage Two: Surverys**
  - Send out surveys to nursing staff by **04/15/25**. 

### **Stage Three: Data Storage**
  - Place all audit data in REDCap by **04/15/25**. 
  - Place all non-intervention data in REDCap by **4/30/25**.
  
### **Stage Four: Observations**
- Observe the intervention in-person (~ 5-10 days) by **05/05/25**.

### **Stage Five: Analysis** 
- Analysis completed by **5/20/25**.

### **Stage Six: Final Write-up**
- Have Final write-up completed by **5/20/25**


## Conclusion (Approximately 1/4 page)
While nurses provide appropriate care, the continuous mental and physical demands allow for an increase in unintentional human error (e.g., missed documentation and turns), reducing efficiency. Therefore, this demonstrates the need to understand the extent to which existing cost-effective tools, such as the Vocera phone alarms, may help improve patient outcomes and nursing performance. Additionally, the project will review the patient’s demographics and health status to understand whether further variables are affecting outcomes


The project aims to reduce missed turns within the SICU and BICU through alarms on the nurse's Vocera phones, reminding them to turn their patient(s) every two hours. The effectiveness of the implemented intervention will be analyzed through a comparison of previous patient data within the EHR.  



Nurses are responsible for ensuring a patient does not develop a pressure injury (PI), which is currently achieved through skin and risk assessments (e.g., Braden Scale) and repositioning. Furthermore, nurses are confronted with countless variables that may affect their performance, including but not limited to heavy workloads, fast-paced environments, and long hours. Collectively, this leads to inadvertent missed documentation and turns, increasing the patient's risk for a PI. 



The intervention has not been proposed to the Alarms Committee at UCM because the alarm itself is not automatic; for instance, alarms that go from the monitor to the staff phone are set alarms. The current intervention may allow the RN to pick their own alarm but requires them to put it into their Vocera phone, which will be set at even hours, alert every two hours, and occur six times per shift. It should be noted that it is not a high-priority alarm, and one may use the snooze feature to si. A decision was made regarding alarm fatigue, which is not classified as a concern here based on the intervention’s collective characteristics of reminding the RN through a phone every two hours (six times per shift), ability to use the snooze feature to si, and not being a high-priority alarm. The current state of the Vocera phone alarms has overwhelmingly increased turn documentation within the SICU and BICU (e.g., 45-50% to 97-98% and no new sacral HAPIs). Nonetheless, questions may arise regarding its effectiveness in the future, such as whether it can become “another alarm,” is reasonable. However, the alarm does carry uniqueness in comparison to others. The alarm obtains a specific known purpose (e.g., turn patient and documentation) and can not be classified or associated as a false alarm. Instead, it is one that alerts at a known set time correlated to a required action. While preventative measures have been implemented and shown to be effective, it is essential not to allow healthcare workers to fall below what is expected of them, regardless of the factors at play. Therefore, the rise in technology use calls for the attempt to dictate whether alarms on Vocera phones may improve missed patient turns, helping to combat the undesired variables nurses face. 



## References


::: {#refs}
:::



```{r}
#| label: Creation of Fake Data
#| include: false
fake_data <- tibble(
  Patient_ID = 1:100,
  Age = sample(20:90, 100, replace = TRUE),
  Nurse = sample(LETTERS, 100, replace = TRUE),
  Braden_Scale = sample(6:23, 100, replace = TRUE),
  Length_of_Stay = sample(0:200, 100, replace = TRUE),
  Type_of_Event = sample(c("Missed Turn", "Repeated Turn"), 100, replace = TRUE),
  Week_of_Event = sample(seq(as.Date("2024-09-01"), as.Date("2025-02-01"), by = "day"), 100, replace = TRUE),
  Time_of_Event = format(sample(seq(ISOdatetime(2024,1,1,0,0,0), ISOdatetime(2025,1,31,23,59,59), by = "hour"), 100, replace = TRUE), "%H:%M:%S"),
  Date_of_Event = sample(seq(as.Date("2024-09-01"), as.Date("2025-02-01"), by = "day"), 100, replace = TRUE)
)

# CHECK
fake_data

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 1
#| include: false
# Rename and Reorder Columns 
fake_data <- fake_data %>%
  select("Patient ID" = "Patient_ID", "Age", "Braden Scale" = "Braden_Scale", "Length of Stay" =  "Length_of_Stay","Type of Event" = "Type_of_Event", "Week of Event" = "Week_of_Event", "Time of Event" = "Time_of_Event", "Date of Event" = "Date_of_Event", "Nurse")

# CHECK
fake_data

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 11
#| include: false
## Descriptive stats pt. 1
fake_data %>%
  summarize(
    mean_age = mean(Age, na.rm = TRUE), # na.rm means it will ignore any missing values
    sd_age = sd(Age, na.rm = TRUE),
    mean_los = mean(`Length of Stay`, na.rm = TRUE),
    sd_los = sd(`Length of Stay`, na.rm = TRUE)
  ) %>%
    mutate(
  `mean_age` = round(`mean_age`, 1),
  `sd_age` = round(`sd_age`, 1),
  `mean_los` = round(`mean_los`, 1),
  `sd_los` = round(`sd_los`, 1)
  ) %>%
  rename(
  `Mean Age` = `mean_age`,
  `Standard Deviation Age` = `sd_age`,
  `Mean Length of Stay` = `mean_los`,
  `Standard Deviation Length of Stay` = `sd_los`)

 ########################### ########################### ###########################

# Type of Event Occurrences
fake_data %>%
  count(`Type of Event`, sort = TRUE) # sort = True places it in descending order 

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 12
#| include: false
## NURSE DATA ANALYSIS PT.1
## 1. How many events were associated with a nurse  
fake_nurse_event_data <- fake_data # Moving original set into new one (fake_nurse_event_data) 
fake_nurse_event_data
fake_nurse_event_data %>%
  count(`Nurse`, sort = TRUE)

 ########################### ########################### ###########################

## 2. Percentage and which nurses committed which event for instance Nurse C was associated with 9 events; therefore, how many were missed vs repeated turns
fake_nurse_event_data_Perc <- fake_nurse_event_data %>%
  group_by(`Nurse`, `Type of Event`) %>%
  summarize(Count = n(), .groups = "drop") %>% # .groups = "drop" will remove the grouping basically groups it to do count then ungroups it
  group_by(Nurse) %>% # We are now grouping 
  mutate(Percentage = (Count / sum(Count))*100) %>% # Count/sum(count) will calc propor then mult by 100 helps to create %
  pivot_wider( # Helping to move the data from long to wide data format below
    names_from = `Type of Event`, 
    values_from = c(Count, Percentage),
    values_fill = list(Count = 0, Percentage = 0)) %>% # If anything is missing then na WILL NOT be placed but instead WILL have 0 
  ungroup()

# Check
fake_nurse_event_data_Perc

 ########################### ########################### ########################### 

## 3. Which nurses committed which event for instance Nurse C was associated with 9 events; therefore, how many were missed vs repeated turns
fake_nurse_event_data <- fake_nurse_event_data %>%
  group_by(`Nurse`, `Type of Event`) %>%
  summarize(Count = n(), .groups = "drop") %>%
  pivot_wider(names_from = `Type of Event`, values_from = Count, values_fill = list(Count = 0)) # Helping to move the data from long to wide data format

 ########################### ########################### ###########################

## 2.1. Fixing the deci placement 
fake_nurse_event_data_Perc <- fake_nurse_event_data_Perc %>%
  mutate(
  `Percentage_Missed Turn` = round(`Percentage_Missed Turn`, 1),
  `Percentage_Repeated Turn` = round(`Percentage_Repeated Turn`, 1))

 # Check 
fake_nurse_event_data_Perc

 ########################### ########################### ########################### 

## 2.2. Fixing the names 
  fake_nurse_event_data_Perc <- fake_nurse_event_data_Perc %>%
  rename(
    `Percentage Missed Turn` = `Percentage_Missed Turn`,
    `Percentage Repeated Turn` = `Percentage_Repeated Turn`,
    `Count Missed Turn` = `Count_Missed Turn`,
    `Count Repeated Turn` = `Count_Repeated Turn`)
 
# Check
fake_data_Repeated <- fake_data
fake_data_Repeated <- fake_data_Repeated %>%
mutate(Repeated_Turn_YesorNo = if_else(str_detect(`Type of Event`, "Repeated Turn"), "Yes", "No")) %>% # str_detect will return a true/false or yes/no
  mutate(Repeated_Turn_YesorNo = str_to_upper(Repeated_Turn_YesorNo)) # str_to_upper will cap all letters while str_to_title does first letter

# Check
fake_data_Repeated 

 ########################### ########################### ###########################

# Capitalize Nurse Letters
fake_data <- fake_data %>%
  mutate(Nurse = str_to_title(Nurse)) # str_to_title does first letter ; REMINDER IT IS NOT THE TITLE ITS THE DATA IN COLUMN

# Check
fake_data

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: fig-SpecNurse_Event_Amount
#| echo: false
#| fig-cap: Nurse events and type of event 

## NURSE DATA ANALYSIS PLOTS pt. 1

# Convert the data back to long
fake_nurse_event_data_Perc_long <- fake_nurse_event_data_Perc
fake_nurse_event_data_Perc_long <- fake_nurse_event_data_Perc_long %>%
pivot_longer(cols = c(`Count Missed Turn`, `Count Repeated Turn`), 
              names_to = "Event Type", values_to = "Count")

########################### ########################### ###########################

# 1 Bar Chart (# of Events / Nurse)
ggplot(fake_nurse_event_data_Perc_long, aes(x = Nurse, y= Count, fill = `Event Type`)) + #aes is aesthetic, fill is type of aesthetic and here bars are filled based on event type
  geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
  # geom_bar creates bar char, stat= "identity" uses the values from data set, position = position_dodge helps make sure the bars are not stacked 
  labs(title = "Number of Events Per Nurse", x = "Nurse", y = "Event Count") +
  scale_fill_manual(values = c("Count Missed Turn" = "blue", 
                               "Count Repeated Turn" = "orange")) + # scale_fill_manual allows for you to place the colors manually 
  theme_minimal(base_family = "Times New Roman") +
    theme(
      axis.text.x = element_text(angle = 0, hjust = 0.5, size = 14), # hjust used for overlap prevention for text  
      axis.text.y = element_text(size = 12),
      axis.title.x = element_text(size = 14, face = "bold"),
      axis.title.y = element_text(size = 14, face = "bold"),
      plot.title = element_text(size = 22, face = "bold", hjust = 0.5),
      legend.position = "top",
      legend.title = element_text(size = 14, face = "bold"),
      legend.text = element_text(size = 12),
      panel.grid.major = element_line(color = "gray90", linetype = "dashed", size = 0.3), 
      plot.margin = margin(10, 10, 10, 10),
      panel.grid.minor = element_blank()) # panel.grid.minor helps get rid of the grid lines

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 33
#| include: false
## NURSE DATA ANALYSIS PT.2
## Check how nurses do overtime 
fake_nurse_event_time_date <- fake_data
fake_nurse_event_time_date <- fake_nurse_event_time_date  %>%
  mutate(`Week of Event` = as.Date(cut(`Week of Event`, breaks = "week"))) %>%  # as.Date MAKE SURE D is CAP but it will convert val to date, cut whatever into a category, breaks will help specify the point where it should be cut off
  group_by(`Week of Event`, `Nurse`, `Type of Event`) %>%
  summarize(Count = n(), .groups = "drop") 

#Check
fake_nurse_event_time_date

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 44
#| include: false
## NURSE DATA ANALYSIS PLOTS pt. 2
ggplot(fake_nurse_event_time_date, aes(x = `Week of Event`, y= `Count`, color = `Nurse`, group = interaction(`Nurse`, `Type of Event`))) +
  geom_line(size = 1) + # geom_line is line graph
  geom_point(size = 2) + # geom_point is scatter graph
  geom_smooth(aes(group = `Type of Event`), method = "loess", se = FALSE, linetype = "dashed", color = "black", size = 1.2) + # geom_smooth is trend line (smooth)
  scale_x_date(date_labels = "%b-%Y", date_breaks = "1 month")+ # date_labels = "%b-%Y" will help for it to be month-year
  facet_grid(rows = vars(`Type of Event`), scales = "free")+
  labs(title = "Nurse Turn Event Trends Over Time",
       x= "Week of Event",
       y= "Number of Events",
       color= "Nurse")+
  theme_minimal(base_family = "Times New Roman") +
  theme(
      axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
      plot.title = element_text(size = 20, face = "bold"),  
      plot.subtitle = element_text(size = 14, face = "italic"),
      legend.position = "right",
      legend.direction = "vertical",
      legend.key.size = unit(0.6, "cm"),
      panel.spacing = unit(.5, "lines") # helps spacing want to use when facets are 
       )

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 55
#| include: false
## NURSE DATA ANALYSIS PT.3
fake_nurse_shift <- fake_data %>%
mutate(`Nurse` = as.factor(`Nurse`),
    Hour = as.numeric(format(strptime(`Time of Event`, format = "%H:%M:%S"), "%H")), # parses chr string to date-time  
    Shift_Type = case_when(
      Hour >= 6 &
      Hour < 18 ~ "Day", 
TRUE ~ "Night")) %>%
mutate(
  Shift_Type = fct_recode(Shift_Type, "Day Shift" = "Day", "Night Shift" = "Night"), # Renaming forcat func
   Shift_Type = fct_relevel(Shift_Type,"Day Shift", "Night Shift"), # reorder levels forcat func
  `Type of Event` = factor(`Type of Event`, levels = c("Missed Turn", "Repeated Turn")),
  `Nurse` = fct_lump(`Nurse`, n = 4)) %>% # creates other categ forecat func
   select(-Hour)
  
# Check
fake_nurse_shift

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: fig-Nurse_Shift_Event
#| echo: false
#| fig-cap: Nurse events and shift type
ggplot(fake_nurse_shift, aes(x= `Shift_Type`, fill= `Type of Event`)) +
  geom_bar(position = "stack", width = 0.7, color = "black") +
  geom_text(stat = "count", aes(label = ..count..), 
    position = position_stack(vjust = 0.5), size = 6, color = "white") + # geom_text is labels/text/values for bars here, aes(label = ..count..) is just the count for each category, position _stack places the label inside the bars, vjust helping to center text (vertically remember hjust)
  scale_fill_manual(values = c("Missed Turn" = "blue", "Repeated Turn" = "orange")) +
  labs(title = "Missed and Repeated Turn Occurrence by Shift",
       x = "Shift Type",
       y = "Number of Events",
       fill = "Event Type") +
  theme_minimal(base_family = "Times New Roman") +
  theme(
plot.title = element_text(size = 22, face = "bold", hjust = 0.5),
axis.text.x = element_text(size = 14, face = "bold", color = "black"),
axis.text.y = element_text(size = 12, color = "black"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = "top",
legend.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray90", linetype = "dashed", size = 0.3), 
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank())

fake_nurse_shift %>%
  count(`Type of Event`, sort = TRUE) 

fake_nurse_shift

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 66
#| include: false
## NURSE DATA ANALYSIS PT.4
fake_nurse_weekdayend <- fake_data
fake_nurse_weekdayend <- fake_nurse_weekdayend  %>%
mutate(
  Day_Type = case_when(
    weekdays(as.Date(`Date of Event`)) %in% c("Saturday", "Sunday") ~ "Weekend",     TRUE ~ "Weekday"  
  )
)

# Check
fake_nurse_weekdayend

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: fig-Nurse_Weekdayend_Type
#| echo: false
#| fig-cap: Nurse shift type (weekdayend) and type of turns 
## NURSE DATA ANALYSIS PLOT PT.4
ggplot(fake_nurse_weekdayend, aes(x = Day_Type, fill = `Type of Event`)) +
  geom_bar(position = "dodge", width = 0.6, color = "black") +
  scale_fill_manual(values = c("Missed Turn" = "blue", "Repeated Turn" = "orange")) +
  labs(title = "Event Occurrence on Weekdays vs. Weekends",
       x = "Day Type",
       y = "Number of Events",
       fill = "Event Type") +
  theme_minimal(base_family = "Times New Roman") +
theme(
plot.title = element_text(size = 22, face = "bold", hjust = 0.5),
axis.text.x = element_text(size = 14, face = "bold", color = "black"),
axis.text.y = element_text(size = 12, color = "black"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = "top",
legend.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray90", linetype = "dashed", size = 0.3), 
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank())

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 88
#| include: false
## Patient Analysis pt 1
fake_patient_event <- fake_data
fake_patient_event <- fake_patient_event %>%
  mutate(Age_Group = cut(Age, breaks = c(20, 40, 60, 80, 100), # cut whatever into a category, breaks will help specify the point where it should be cut off
                         labels = c("20-39", "40-59", "60-79", "80+")))

# Check
fake_patient_event

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: fig-Nurse_Event_Age
#| echo: false
#| fig-cap: Nurse events and Age 
## Patient Analysis PLOT pt 1
ggplot(fake_patient_event, aes(x = Age_Group, fill = `Type of Event`)) +
  geom_bar(position = "dodge", width = 0.8, color = "black") +
  scale_fill_manual(values = c("Missed Turn" = "blue", "Repeated Turn" = "orange")) +
  labs(title = "Event Occurrence by Age Group",
       x = "Age Group",
       y = "Number of Events",
       fill = "Event Type") + 
  theme_minimal(base_family = "Times New Roman") +
theme(
plot.title = element_text(size = 24, face = "bold", hjust = 0.5),
axis.text.x = element_text(size = 14, face = "bold", color = "black"),
axis.text.y = element_text(size = 12, color = "black"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = "top",
legend.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray90", linetype = "dashed", size = 0.3), 
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank())

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 00
#| include: false
## Patient Analysis Plot pt 2
## Event type and lOS
ggplot(fake_data, aes(x= `Type of Event`, y = `Length of Stay`, fill = `Type of Event`)) +
  geom_boxplot(width = 0.5, outlier.color = "red", outlier.shape = NA, outlier.size = 1.5) + # outlier. is just outliers 
  geom_jitter(aes(color = `Type of Event`), width = 0.2, size = 2, alpha = 0.5) +
  scale_fill_manual(values = c("Missed Turn" = "blue", "Repeated Turn" = "orange")) +
  labs(title = "Relationship Between Event Type and Length of Stay",
       x= "Event Type",
       y= "Length of Stay (Days)",
       fill= "Event Type",
       color= "Event Type") +
  theme_minimal(base_family = "Times New Roman") +
 theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.text.x = element_text(size = 14, face = "bold", color = "black"),
axis.text.y = element_text(size = 12, color = "black"),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = "top",
legend.title = element_text(size= 14, face = "bold"),
legend.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray90", linetype = "dashed", size = 0.3), 
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank()) 

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 000
#| include: false
# T test for Los and Type of event
result_t_test <- t.test(`Length of Stay` ~ `Type of Event`, data = fake_data)

# Check
result_t_test

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 383
## Patient Stay
fake_patient_event <- fake_patient_event %>%
  mutate(
    Type_of_Stay = if_else(`Length of Stay` >= 15, "Long Stay", "Normal Stay")
  )


## High Risk and Patient Stay
## Less than 9 is considered severe
fake_patient_event <- fake_patient_event %>%
  mutate(
    Long_Stay_High_Risk = if_else(
      (`Braden Scale` <= 12 & `Length of Stay` >15) | (`Braden Scale` <9),
      "High Risk", 
      "Normal Risk"
    ))

# Check 
fake_patient_event

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: fig-Age_Type_Risk
#| echo: false
#| fig-cap: Age type and risk

ggplot(fake_patient_event, aes(x = `Age_Group`, fill = `Type of Event`)) +
  geom_bar(position = "dodge", color = "black") +
  facet_wrap(~ Long_Stay_High_Risk) + 
  scale_fill_manual(values = c("Missed Turn" = "blue", "Repeated Turn" = "orange")) +
  labs(title = "x",
       x = "Age Group",
       y = "Number of Events",
       fill = "Event Type") +
  theme_minimal(base_family = "Times New Roman") +
  theme(
    plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
    axis.text.x = element_text(size = 14, face = "bold", color = "black"),
    axis.text.y = element_text(size = 12, color = "black"),
    axis.title.x = element_text(size = 16, face = "bold"),
    axis.title.y = element_text(size = 16, face = "bold"),
    legend.position = "top",
    legend.title = element_text(size = 14, face = "bold"),
    legend.text = element_text(size = 12),
    panel.grid.major = element_line(color = "gray90", linetype = "dashed", size = 0.3),
    plot.margin = margin(10, 10, 10, 10),
    panel.grid.minor = element_blank()
  )

### chattttttt

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```









```{r}
#| label: ADD Titlei5i
#| include: false
# Analyze the data for Event(s)
#Type of Events
fake_data %>%
  count(`Type of Event`, sort = TRUE)

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 
 
```

```{r}
#| label: ADD Title 34954
#| include: false
# Write fake_data to a .csv file 
getwd()
write_csv(fake_data, "fake_data.csv")
fake_data.csv <- read_csv("/Users/michaelavalosjr./Repos for Rstudio/Vocera-Phone-Alarms/fake_data.csv")

# Check
fake_data.csv

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```



```{r}
#| label: T-test Braden Score, Missed and Repeated Turn
Braden_t_test <- t.test(`Braden Scale` ~ `Type of Event`, data = fake_data)
# Means for two groups is compared to dictate whether the diff is stat sig (t-test), checking if the braden score alters based on missed or repeated

# Check
Braden_t_test

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```


```{r}
#| label: Chi-sq Test for Nurse and Missed and Reapted Turn
#| include: false
nurse_event_table <- table(fake_data$`Type of Event`, fake_data$`Nurse`)

# Chi-sq-test
chi_sq_test_nurse_event <- chisq.test(nurse_event_table)

# Check
chi_sq_test_nurse_event

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```

```{r}
#| label: ADD Title 454657658778
# Label placement 
# Table for Descriptive results 
T_and_chisq_table <- data.frame(
  Test = c("T-Test (Braden Scale ~ Type of Event", "Chi-Square (Event ~ Nurse Associated)"), 
  Statistic = c(round(Braden_t_test$statistic, 2), round(chi_sq_test_nurse_event$statistic, 2)),
  p_value = c(round(Braden_t_test$p.value, 4), round(chi_sq_test_nurse_event$p.value, 2)),
    df = c(round(Braden_t_test$parameter, 2), chi_sq_test_nurse_event$statistic),
  Method = c(Braden_t_test$method, chi_sq_test_nurse_event$method)
)

kable(T_and_chisq_table,
      caption = "Hypothesis Test Results: T-Test and Chi-Square",
      col.names = c("Test", "Statistic", "p-value", "Degress of Freedom", "Method"))

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```







```{r}
#| label: ADD Title 5785869869609707
#| include: false


# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```



```{r}
#| label: fig-SpecNurse_Shift_missed
#| echo: false
#| fig-cap: Nurse shift and missed turns 
ggplot(fake_nurse_shift %>% filter(`Type of Event` == "Missed Turn"), 
       aes(x = Nurse, fill = `Shift_Type`)) +
  geom_bar(position = "dodge", width = 0.7, color = "black") +
  labs(title = "x",
       x = "Nurse",
       y = "Number of Missed Turns",
       fill = "Shift Type") +
  theme_minimal(base_family = "Times New Roman") +
  theme(
    plot.title = element_text(size = 22, face = "bold", hjust = 0.5),
    axis.text.x = element_text(size = 14, face = "bold", color = "black"),
    axis.text.y = element_text(size = 12, color = "black"),
    axis.title.x = element_text(size = 16, face = "bold"),
    axis.title.y = element_text(size = 16, face = "bold"),
    legend.position = "top",
    legend.title = element_text(size = 14, face = "bold"),
    legend.text = element_text(size = 12),
    panel.grid.major = element_line(color = "gray90", linetype = "dashed", size = 0.3), 
    plot.margin = margin(10, 10, 10, 10),
    panel.grid.minor = element_blank())

# Chatttttttt

# Comment Help from CHATGPT
# Help from ChatGPT throughtout Chunk 

```


